# Learn more about services, parameters and containers at
# http://symfony.com/doc/current/service_container.html
parameters:
    interactive_login_listener.class:
        AppBundle\Listener\LoginListener
    #parameter_name: value

services:
    app.form.handler.registration:
          class: AppBundle\Form\Handler\RegistrationFormHandler
          arguments: ["@fos_user.registration.form", "@request", "@fos_user.user_manager", "@fos_user.mailer", "@fos_user.util.token_generator"]
          scope: request
          public: false
    app.form.registration:
            class: AppBundle\Form\RegistrationType
            tags:
                - { name: form.type, alias: app_user_registration }
    admin.category:
          class: AppBundle\Admin\CategoryAdmin
          arguments: [~, AppBundle\Entity\Category, ~]
          tags:
              - { name: sonata.admin, manager_type: orm }
    admin.company:
          class: AppBundle\Admin\G_CompanyAdmin
          arguments: [~, AppBundle\Entity\G_Company, ~]
          tags:
              - { name: sonata.admin, manager_type: orm }
    admin.employee:
          class: AppBundle\Admin\m_employeeAdmin
          arguments: [~, AppBundle\Entity\m_employee, ~]
          tags:
              - { name: sonata.admin, manager_type: orm }
    admin.fosuser:
          class: AppBundle\Admin\UserAdmin
          arguments: [~, AppBundle\Entity\User, ~]
          tags:
              - { name: sonata.admin, manager_type: orm }
    app.login_listener:
            class: AppBundle\Listener\LoginListener
            arguments: ["@fos_user.user_manager","@security.authorization_checker","@router","@event_dispatcher"]
            tags:
              - { name: kernel.event_listener, event: security.interactive_login, method: onSecurityInteractiveLogin }
    app.login_success_handler:
            public: false
            class: AppBundle\Security\LoginSuccessHandler
            arguments: ["@security.token_storage", "@router","@security.authorization_checker"]
    kernel.listener.your_pdo_listener:
            class: AppBundle\EventListener\YourExceptionListener
            tags:
               - { name: kernel.event_listener, event: kernel.exception, method: onPdoException }







    #service_name:
    #    class: AppBundle\Directory\ClassName
    #    arguments: ['@another_service_name', 'plain_value', '%parameter_name%']
